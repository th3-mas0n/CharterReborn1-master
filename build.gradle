plugins {
	id 'fabric-loom' version '1.0+'
	id 'maven-publish'
}

loom {
	accessWidenerPath = file("src/main/resources/charter.accesswidener")
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven {
		name = "Ladysnake Mods"
		url = "https://maven.ladysnake.org/releases"
	}
	maven {
		name = "Reach"
		url = "https://maven.jamieswhiteshirt.com/libs-release"
	}
	maven {
		name = "Nexus OSS Repository"
		url = "https://oss.sonatype.org/content/repositories/snapshots"
	}
	maven {
		url = "https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/"
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	include "me.lucko:fabric-permissions-api:${fpa_version}"
	modImplementation "org.ladysnake:impersonate:${impersonate_version}"
	include "org.ladysnake:impersonate:${impersonate_version}"
	// Impersonate dependencies
	modImplementation include("dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cca_version}")
	modImplementation include("dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cca_version}")
	modImplementation include("dev.onyxstudios.cardinal-components-api:cardinal-components-world:${project.cca_version}")
	modImplementation "software.bernie.geckolib:geckolib-fabric-1.20.1:${project.geckolib_version}"

	modImplementation include("com.jamieswhiteshirt:reach-entity-attributes:2.4.0")

}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}
